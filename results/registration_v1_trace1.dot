digraph {
graph [ordering = out]
edge [arrowhead = none, penwidth = 1.6, fontsize = 30]
node [shape = point, width = 0, height = 0, fontsize = 30]
Trace [label = <A trace has been found.<br/>
>, shape = plaintext]
P0__0 [label = "Honest Process", shape = plaintext]
P__0 [label = "Attacker", shape = plaintext]
Trace -> P0__0 [label = "", style = invisible, weight = 100]{rank = same; P0__0 P__0}
P0__0 -> P0__1 [label = <>, weight = 100]
P0__1 -> P0__2 [label = <>, weight = 100]
P0__2 [shape = plaintext, label = <<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"> <TR><TD><FONT COLOR="darkgreen">{1}</FONT><FONT COLOR="blue">new </FONT>privKeyAttestation_2</TD></TR></TABLE>>]
P0__2 -> P0__3 [label = <>, weight = 100]
/*RPar */
P0__3 -> P0_1__3 [label = <>]
P0__3 -> P0_0__3 [label = <>]
P0__3 [label = "", fixedsize = false, width = 0, height = 0, shape = none]
{rank = same; P0_0__3 P0_1__3}
P0_0__3 [label = "!", shape = ellipse]
P0_0_0__3 [label = "", fixedsize = false, width = 0, height = 0, shape = none]
P0_0__3 -> P0_0_0__3 [label = <>, weight = 100]
P0_0_0__3 -> P0_0_0__4 [label = <>, weight = 100]
P0_0_0__4 [shape = plaintext, label = <<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"> <TR><TD>Beginning of process <FONT COLOR="darkgreen">authenticator</FONT></TD></TR></TABLE>>]
P0_0_0__4 -> P0_0_0__5 [label = <>, weight = 100]
P0_1__3 [label = "!", shape = ellipse]
P0_1_0__3 [label = "", fixedsize = false, width = 0, height = 0, shape = none]
P0_1__3 -> P0_1_0__3 [label = <>, weight = 100]
P0_1_0__3 -> P0_1_0__4 [label = <>, weight = 100]
P0_1_0__4 [shape = plaintext, label = <<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"> <TR><TD>Beginning of process <FONT COLOR="darkgreen">relyingParty</FONT></TD></TR><TR><TD><FONT COLOR="darkgreen">{4}</FONT><FONT COLOR="blue">new </FONT>nonceRP_1</TD></TR></TABLE>>]
P0_1_0__4 -> P0_1_0__5 [label = <>, weight = 100]
P0_1_0__5 -> P0_1_0__6 [label = <>, weight = 100]
P0_0_0__5 -> P0_0_0__6 [label = <>, weight = 100]
P__0 -> P__1 [label = <>, weight = 100]
{rank = same; P__1 P0_0_0__6 P0_1_0__6}
P0_1_0__6 -> P0_1_0__7 [label = <>, weight = 100]
P__1 -> P__2 [label = <>, weight = 100]
{rank = same; P__2 P0_1_0__7}
P0_1_0__7 -> P__2 [label = <(~M,~M_1) = (nonceRP_1,publicKey(dh_priv_RP))>, arrowhead = normal]
P0_1_0__7 -> P0_1_0__8 [label = <>, weight = 100]
P0_0_0__6 -> P0_0_0__7 [label = <>, weight = 100]
P__2 -> P__3 [label = <>, weight = 100]
{rank = same; P__3 P0_0_0__7 P0_1_0__8}
P0_0_0__7 -> P0_0_0__8 [label = <>, weight = 100]
P__3 -> P__4 [label = <>, weight = 100]
{rank = same; P__4 P0_0_0__8}
P0_0_0__8 -> P0_0_0__9 [label = <>, weight = 100]
P__4 -> P__5 [label = <>, weight = 100]
{rank = same; P__5 P0_0_0__9}
P0_0_0__9 -> P__5 [label = <(~M,a_1) = (nonceRP_1,a_1)>, dir = back, arrowhead = normal]
P0_0_0__9 -> P0_0_0__10 [label = <>, weight = 100]
P__5 -> P__6 [label = <>, weight = 100]
{rank = same; P__6 P0_0_0__10}
P0_0_0__10 -> P0_0_0__11 [label = <>, weight = 100]
P0_0_0__11 [shape = plaintext, label = <<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"> <TR><TD><FONT COLOR="darkgreen">{14}</FONT><FONT COLOR="blue">new </FONT>credPrivKey_1</TD></TR><TR><TD><FONT COLOR="darkgreen">{18}</FONT><FONT COLOR="blue">event</FONT> registerAU(computeSecret(a_1,dh_priv_AU))<br/>
</TD></TR></TABLE>>]
P0_0_0__11 -> P0_0_0__12 [label = <>, weight = 100]
P0_0_0__12 -> P0_0_0__13 [label = <>, weight = 100]
P__6 -> P__7 [label = <>, weight = 100]
{rank = same; P__7 P0_0_0__13}
P0_0_0__13 -> P0_0_0__14 [label = <>, weight = 100]
P__7 -> P__8 [label = <>, weight = 100]
{rank = same; P__8 P0_0_0__14}
P0_0_0__14 -> P__8 [label = <(~M_2,~M_3,~M_4)>, arrowhead = normal]
P0_0_0__14 -> P0_0_0__15 [label = <>, weight = 100]
P__8 -> P__9 [label = <>, weight = 100]
{rank = same; P__9 P0_0_0__15}
P0_0_0__16 [label = "", width = 0.3, height = 0.3]
P0_0_0__15 -> P0_0_0__16 [label = <>, weight = 100]
P0_1_0__8 -> P0_1_0__9 [label = <>, weight = 100]
P0_0_0__17 [label = "", style = invisible]
P0_0_0__16 -> P0_0_0__17 [label = <>, weight = 100, style = invisible]
P__9 -> P__10 [label = <>, weight = 100]
{rank = same; P__10 P0_0_0__17 P0_1_0__9}
P0_1_0__9 -> P0_1_0__10 [label = <>, weight = 100]
P__10 -> P__11 [label = <>, weight = 100]
{rank = same; P__11 P0_1_0__10}
P0_1_0__10 -> P__11 [label = <~X_1>, dir = back, arrowhead = normal]
P0_1_0__10 -> P0_1_0__11 [label = <>, weight = 100]
P0_0_0__18 [label = "", style = invisible]
P0_0_0__17 -> P0_0_0__18 [label = <>, weight = 100, style = invisible]
P__11 -> P__12 [label = <>, weight = 100]
{rank = same; P__12 P0_0_0__18 P0_1_0__11}
P0_1_0__11 -> P0_1_0__12 [label = <>, weight = 100]
P0_1_0__12 [color = red, shape = plaintext, label = <<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"> <TR><TD><FONT COLOR="darkgreen">{10}</FONT><FONT COLOR="blue">event</FONT> registerRP(computeSecret(publicKey(dh_priv_AU),<br/>
dh_priv_RP))</TD></TR></TABLE>>]
P0_1_0__12 -> P0_1_0__13 [label = <>, weight = 100]
Abbrev [shape = plaintext, label = <<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR> <TD> Abbreviations </TD></TR><TR><TD>~M_2 = vk(credPrivKey_1)</TD></TR><TR><TD>~M_3 = publicKey(dh_priv_AU)</TD></TR><TR><TD>~M_4 = sign((nonceRP_1,vk(credPrivKey_1),publicKey(<br/>
dh_priv_AU)),privKeyAttestation_2)</TD></TR><TR><TD>~X_1 = (a_3,~M_2,~M_3,~M_4) = (a_3,vk(credPrivKey_1),<br/>
publicKey(dh_priv_AU),sign((nonceRP_1,vk(credPrivKey_1),<br/>
publicKey(dh_priv_AU)),privKeyAttestation_2))</TD></TR></TABLE>>]Abbrev -> P__0 [style = invisible, weight =100]}